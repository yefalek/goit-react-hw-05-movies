{"version":3,"file":"static/js/Cast.6c880c85.chunk.js","mappings":"sQAOe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KAUE,OARAC,EAAAA,EAAAA,YAAU,WACNH,EAAUF,EAAAA,EAAAA,SACVM,YAAW,WAAOC,EAAAA,GAA2BX,GAASY,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACxDV,EAASU,GACTP,EAAUF,EAAAA,EAAAA,aAAoBU,OAAM,SAAAP,GACpCC,EAASD,GACTD,EAAUF,EAAAA,EAAAA,eACN,OAAQ,CAACJ,KAEnB,gCACGK,IAAWD,EAAAA,EAAAA,UAAkB,SAAC,IAAD,IAC7BC,IAAWD,EAAAA,EAAAA,WAAoB,SAAC,IAAD,CAAgBW,QAASR,EAAMQ,UAC9Db,GAASG,IAAWD,EAAAA,EAAAA,WACnB,wBACGF,EAAMc,KAAI,SAACH,EAAMI,GAAP,OACT,0BAAaJ,EAAKK,cAAgB,gBAAKC,IAAG,UAhBxC,mCAgBwC,OAAeN,EAAKK,cAAgBE,MAAM,MAAMC,OAAO,MAAMC,IAAKT,EAAKU,QAAY,gBAAKJ,IAAKK,EAAUJ,MAAM,MAAMC,OAAO,MAAMC,IAAKT,EAAKU,QACpL,uBAAIV,EAAKU,SADAN,a","sources":["components/MoviesView/Cast/Cast.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as movieAPI from '../../../services/movie-api';\nimport noPoster from './No_image_poster.png'\nimport Loader from \"components/Loader\";\nimport ImageErrorView from \"views/ImgesErrorView\";\nimport Status from \"services/Status\";\n\nexport default function Cast({ movieId }) {\n  const [casts, setCasts] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n    useEffect(() => {\n        setStatus(Status.PENDING);\n        setTimeout(() => {movieAPI.fetcthActorsMovie(movieId).then(({ cast }) => {\n              setCasts(cast);\n              setStatus(Status.RESOLVED);}).catch(error => {\n              setError(error);\n              setStatus(Status.REJECTED);\n            });}, 500);}, [movieId]);\n    return (\n        <>\n          {status === Status.PENDING && <Loader />}\n          {status === Status.REJECTED && (<ImageErrorView message={error.message} />)}\n          {casts && status === Status.RESOLVED && (\n            <ul >\n              {casts.map((cast, i) => (\n                <li key={i}>{cast.profile_path ? (<img src={`${IMG_URL}${cast.profile_path}`} width=\"100\" height=\"150\" alt={cast.name}/>) : (<img src={noPoster} width=\"100\" height=\"150\" alt={cast.name}/>)}\n                <p>{cast.name}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      );\n}"],"names":["Cast","movieId","useState","casts","setCasts","Status","status","setStatus","error","setError","useEffect","setTimeout","movieAPI","then","cast","catch","message","map","i","profile_path","src","width","height","alt","name","noPoster"],"sourceRoot":""}