{"version":3,"file":"static/js/HomeView.9ec72cb6.chunk.js","mappings":"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","sources":["services/movie-api.js","services/stylePagination.js","components/PageHeading.js","views/HomeView.js","views/ViewItem.js"],"sourcesContent":["// const BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '8620b0972e59ad7d1bfd77d28c680ffe'; //API (v3 auth)\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//     const response = await fetch(url, config);\n//     return response.ok ? await response.json() : Promise.reject(new Error('Sory, not found your search'));\n// }\n// //popular list of films today, main page\n// export function  fetchTrending(page) {\n//     return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n// }\n\n// //search some films\n// export function featchSearchMovie(query, page) {\n//     return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`,);\n// }\n\n// export function fetchDetailsMovie(movieId) {\n//     return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,);\n// }\n\n// //personal film information\n// export function fetchDetailsMovieVideo(movieId) {\n//     return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`,);\n// }\n\n// //this film's actors\n// export function fetcthActorsMovie(movieId) {\n//     return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,);\n// }\n\n// //this film's review\n// export function fetchReviewsMovie(movieId) {\n//     return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,);\n// }\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3e578bff48344bae402706e1fb82ceb7'; //Ключ API (v3 auth)\n// const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n//список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport function fetchTrending(page) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`,\n  );\n}\n// поиск кинофильма по ключевому слову на странице фильмов.\nexport function fetchSearchMovie(query, page) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`,\n  );\n  //\n}\n//запрос полной информации о фильме для страницы кинофильма.\nexport function fetchDetailsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n}\n//запрос полной информации о фильме для страницы кинофильма.\nexport function fetchDetailsMovieVideo(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`,\n  );\n}\n//запрос информации о актёрском составе для страницы кинофильма.\nexport function fetcthActorsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n}\n//запрос обзоров для страницы кинофильма.\nexport function fetchReviewsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 0',\n\n    '& .MuiPaginationItem-page.Mui-selected, & .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible,  & .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible':\n      {\n        backgroundColor: '#6c5b7b',\n      },\n    '& .MuiPaginationItem-root': {\n      color: '#000000',\n    },\n    '& .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible':\n      {\n        opacity: '0.7',\n      },\n    '& .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible':\n      {\n        opacity: '1',\n      },\n    '& .MuiPagination-ul': {\n      justifyContent: 'center',\n    },\n  },\n});\n\nexport default useStyles;","export default function PageHeading({ text }) {return (<h1>{text}</h1>);}","import { useLocation, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport PageHeading from \"../components/PageHeading\";\nimport * as movieApi from \"../services/movie-api\";\nimport useStyles from \"../services/stylePagination\";\nimport ViewItem from \"./ViewItem\"\nimport './HomeView.scss';\n\nexport default function HomeView() {\n    \n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n    const [trendings, setTrending] = useState(null);\n    const [totalPage, setTotalPage] = useState(null);\n\n    const page = new URLSearchParams(location.search).get('page') ?? 1;\n\n    useEffect(() => {\n        movieApi.fetchTrending(page).then(({ results, total_pages }) => {\n            setTrending(results);\n            setTotalPage(total_pages);\n        });\n    }, [page]);\n    const handleChange = (e, page) => {\n        history.push({ ...location, search: `page=${page}` });\n    };\n\n    return (\n        <>\n            <PageHeading text=\"Popular today\" />\n            \n            {trendings && (\n                <ul className=\"movies\">\n                    {trendings.map(trending => (\n                        <ViewItem\n                            key={trending.id}\n                            images={trending.poster_path}\n                            id={trending.id}\n                            title={trending.title}\n                            rating={trending.vote_avarage}\n                        />\n                    ))}\n                </ul>\n            )}\n            {totalPage > 1 && (\n                <Pagination\n                    className={classes.root}\n                    count={totalPage}\n                    size=\"large\"\n                    page={Number(page)}\n                    shape=\"rounded\"\n                    showFirstButton\n                    showLastButton\n                    onChange={handleChange}\n                />\n            )}\n        </>\n    );\n}","import { useLocation, NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport slugify from 'slugify';\nimport noImages from '../images/images.png';\n\nexport default function ViewItem({ id, title, images, rating }) {\n    const location = useLocation();\n    const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\n    const makeSlug = string => slugify(string, { lower: true, });\n    \n    return (\n        <li key={id} className=\"movies_item\">\n            <NavLink to={{\n                pathname: `/movies/${makeSlug(`${title}${id}`)}`,\n                state: { from: location },\n            }}>\n                <div ></div>\n                <img src={images ? `${IMG_URL}${images}` : noImages}\n                    alt={title}\n                    width=\"300\"\n                />\n                <p className=\"movies__title\">{title}</p>\n                <p className=\"movies__item-rating\">{rating}</p>\n            </NavLink>\n        </li>\n    );\n}\n\nViewItem.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string,\n};"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","page","fetchSearchMovie","query","fetchDetailsMovie","movieId","fetchDetailsMovieVideo","fetcthActorsMovie","fetchReviewsMovie","useStyles","makeStyles","root","display","justifyContent","padding","backgroundColor","color","opacity","PageHeading","text","HomeView","classes","history","useHistory","location","useLocation","useState","trendings","setTrending","totalPage","setTotalPage","URLSearchParams","search","get","useEffect","movieApi","then","results","total_pages","className","map","trending","ViewItem","images","poster_path","id","title","rating","vote_avarage","Pagination","count","size","Number","shape","showFirstButton","showLastButton","onChange","e","push","string","to","pathname","slugify","lower","state","from","src","noImages","alt","width"],"sourceRoot":""}